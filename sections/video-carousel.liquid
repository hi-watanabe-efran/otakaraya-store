{%- comment -%}
  Video carousel section — file: sections/video-carousel.liquid
{%- endcomment -%}

<style>
  #shopify-section-{{ section.id }} {
    margin-top: 4em;
  }

  #shopify-section-{{ section.id }} .carousel-heading {
    text-align: center;
    font-size: 3rem;
    letter-spacing: 4px;
    font-family: 'Noto Sans JP';
  }

  #shopify-section-{{ section.id }} .carousel-subheading {
    text-align: center;
    margin-bottom: 20px;
    font-family: 'Noto Sans JP';
  }

  /* --- スライド拡大・縮小アニメーション --- */
  #video-carousel-{{ section.id }} .splide__slide  {
  }

  #video-carousel-{{ section.id }} .splide__slide.is-active .movie_wrap {
    transform: scale(1);
    cursor: pointer;
  }
  #video-carousel-{{ section.id }} .splide__slide.is-active .movie_wrap:hover {
    opacity: 0.7;
  }

  #video-carousel-{{ section.id }} .splide__slide:not(.is-active) .movie_wrap  {
    transform: scale(0.6);
  }


  #video-carousel-{{ section.id }} .splide__arrow {
    background: none;
  }

  #video-carousel-{{ section.id }} .splide__arrow svg {
    height: 2em;
    width: 2em;
  }

  #video-carousel-{{ section.id }} .splide__arrows.splide__arrows--ltr {
    margin: auto;
    width: 50%;
    position: relative;
    top: 11vw;
  }

  #video-carousel-{{ section.id }} .movie_wrap{
    background-color:black;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: transform 0.5s ease, opacity 0.5s ease;
  }

  #video-carousel-{{ section.id }} .saitei_bt {
    position: absolute;
    z-index: 1;
    width:100px;
    opacity: 0.9;
  }


  #video-carousel-{{ section.id }} .splide__slide.is-active .movie_wrap .saitei_bt_thumbnail {
    opacity: 1;
  }

  #video-carousel-{{ section.id }} .splide__slide:not(.is-active) .movie_wrap .saitei_bt_thumbnail  {
    opacity: 0.7;
  }


  #video-carousel-{{ section.id }} .saitei_bt_thumbnail {
    width: 100%;
    aspect-ratio: 16 / 9;
    object-fit: cover;
  }

  #video-carousel-{{ section.id }} .splide__pagination {
     bottom: 10rem;
  }

  #video-carousel-{{ section.id }}  .carousel-btn-area {
    text-align: center;
    margin-top: 6rem;
  }


  #video-carousel-{{ section.id }}  .carousel-btn {
    display: inline-block;
    background: transparent;
    color: black;
    padding: 8px 64px;
    border-radius: 6px;
    font-size: 1.6rem;
    text-decoration: none;
    transition: background 0.5s;
    border: solid 2px black;
    letter-spacing: 6px;
  }


  #video-carousel-{{ section.id }}  .carousel-btn:hover {
    background: #222;
    color: white;
  }


  /* --- モーダル --- */
  .vc-modal {
    position: fixed;
    inset: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    background: rgba(0, 0, 0, 0.7);
    z-index: 10000;
  }

  .vc-modal[hidden] {
    display: none !important;
  }

  .vc-modal__content {
    position: relative;
    width: 100%;
    height: 100%;
  }

  .vc-modal__inner {
    display: flex ;
    width: 100%;
    height: 100%;
  }

  .vc-modal__content iframe {
    position: relative;
    width: 70%;
    aspect-ratio: 16 / 9;
    max-height: 100%;
    margin: auto;
  }

  .vc-modal__close {
    position: absolute;
    right: 10px;
    top: 10px;
    background: none;
    border: none;
    font-size: 5vw;
    color: #fff;
    cursor: pointer;
    font-family: 'Noto Sans JP';
  }

  body.vc-modal-open {
    overflow: hidden;
  }
  @media (max-width: 749px) {
    #video-carousel-{{ section.id }} .splide__arrows.splide__arrows--ltr {
      width: 100%;
      top: 23vw;
    }

    #video-carousel-{{ section.id }} .saitei_bt {
      width:50px;
    }

    .vc-modal__content iframe {
      width: 100%;
    }
    .vc-modal__close {
      font-size: 8vw;
    }
  }
</style>

{%- comment -%} ---------- 動画 ID 一覧を pages.movies から取得 ---------- {%- endcomment -%}
{% assign movies_page = pages.movies %}

{%- comment -%} ❶ </p> をカンマに変換 → HTMLタグ除去 → 不要な空白調整 {%- endcomment -%}
{% assign csv_ids = movies_page.content | replace: '</p>', ',' | strip_html | replace: ' ,', ',' | replace: ', ', ',' %}

{%- comment -%} ❷ カンマで分割し、先頭5つだけに制限 {%- endcomment -%}
{% assign full_list = csv_ids | split: ',' %}
{% assign id_list = full_list | slice: 0, 5 %}

<section id="section-{{ section.id }}" class="video-carousel-section">
  {% if section.settings.heading != blank %}
    <div class="carousel-heading">MOVIE</div>
    <div class="carousel-subheading">動画</div>
  {% endif %}

  <div id="video-carousel-{{ section.id }}" class="splide">
    <div class="splide__track">
      <ul class="splide__list">
        {% for item in id_list %}
          {% assign token = item | strip %}
          {% if token == '' %}{% continue %}{% endif %}

          {% assign provider = section.settings.default_provider %}
          {% assign video_id = token %}

          {% case provider %}
            {% when 'youtube' %}
              <li class="splide__slide" data-provider="youtube" data-video-id="{{ video_id }}">
                <div class="movie_wrap">
                  <img
                    class="saitei_bt"
                    src="{{ 'saisei_bt.png' | asset_url }}"
                    alt="再生ボタン"
                  >

                  <img
                    class="saitei_bt_thumbnail"
                    src="https://img.youtube.com/vi/{{ video_id }}/maxresdefault.jpg"
                    loading="lazy"
                    alt="YouTube thumbnail"
                  >
                </div>
              </li>
            {% when 'vimeo' %}
              <li class="splide__slide" data-provider="vimeo" data-video-id="{{ video_id }}">
                <div
                  class="vimeo-thumb-placeholder"
                  style="aspect-ratio:16/9;background:#000;display:flex;align-items:center;justify-content:center;color:#fff;"
                >
                  Loading…
                </div>
              </li>
          {% endcase %}
        {% endfor %}
      </ul>
    </div>
    <div class="carousel-btn-area">
      <a class="carousel-btn" href="https://otakaraya-store.com/pages/movies/">VIEW MORE</a>
    </div>
  </div>

  <!-- モーダル -->
  <div id="vc-modal-{{ section.id }}" class="vc-modal" hidden>
    <div class="vc-modal__overlay"></div>
    <div class="vc-modal__content">
      <button class="vc-modal__close" aria-label="Close">&times;</button>
      <div class="vc-modal__inner"></div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
  
   const root = '#video-carousel-{{ section.id }}';
    const rootElement = document.querySelector(root);

    // Splideが読み込まれていない、または対象要素がなければ処理を中断
    if (typeof Splide === 'undefined' || !rootElement) {
      return;
    }

    const promises = [];

    /* ---------- YouTube 動画の有効性チェック ---------- */
    // 'youtube'のプロバイダーを持つスライドをすべて選択
    document.querySelectorAll(`${root} .splide__slide[data-provider="youtube"]`).forEach((slide) => {
      const videoId = slide.dataset.videoId;
      // oEmbed APIを使い、動画の存在を確認するPromiseを作成
      const promise = fetch(`https://www.youtube.com/oembed?url=https://www.youtube.com/watch?v=${videoId}&format=json`)
        .then(response => {
          // response.okがfalseの場合 (404 Not Found, 403 Forbiddenなど)
          // 動画は非公開、削除済み、またはIDが間違っている
          if (!response.ok) {
            console.warn(`YouTube video with ID ${videoId} is not available. Removing from carousel.`);
            slide.remove(); // スライドをDOMから削除
          }
        })
        .catch(error => {
          // ネットワークエラーなど
          console.error(`Error checking YouTube video ${videoId}:`, error);
          slide.remove(); // エラー時もスライドを削除
        });
      promises.push(promise);
    });

    /* ---------- Vimeo サムネイル取得 ---------- */
    // 'vimeo'のプロバイダーを持つスライドをすべて選択
    document.querySelectorAll(`${root} .splide__slide[data-provider="vimeo"]`).forEach((slide) => {
      const videoId = slide.dataset.videoId;
      const promise = fetch(`https://vimeo.com/api/v2/video/${videoId}.json`)
        .then(response => response.json())
        .then(data => {
          if (data && data[0] && data[0].thumbnail_large) {
            slide.innerHTML = `<img src="${data[0].thumbnail_large}" loading="lazy" alt="Vimeo thumbnail">`;
          } else {
            // Vimeo動画が見つからない場合もスライドを削除
            slide.remove();
          }
        })
        .catch(() => {
          // エラー時もスライドを削除
          slide.remove();
        });
      promises.push(promise);
    });

    /* ---------- すべてのチェック完了後にSplideを初期化 ---------- */
    // Promise.allSettled を使い、すべてのAPIチェックが終わるのを待つ
    Promise.allSettled(promises).then(() => {
      // 有効なスライドが1つ以上残っている場合のみSplideを初期化
      if (rootElement.querySelectorAll('.splide__slide').length > 0) {
        const splide = new Splide(root, {
          type: 'loop',
          perPage: 1,
          focus: 'center',
          arrows: true,
          pagination: true,
          padding: '30%',
          autoplay: true,
          speed: 1000,
          interval: 3000,
          breakpoints: { 750: { padding: '10%' } },
        });

        /* 中央スライドに is-active を付与 */
        const markActive = () => {
          splide.Components.Slides.forEach((Slide) => {
            Slide.slide.classList.toggle('is-active', Slide.index === splide.index);
          });
        };

        splide.on('mounted move', markActive);
        splide.mount();
      } else {
        // 表示できる動画がない場合、カルーセル全体を非表示にする
        rootElement.style.display = 'none';
        const heading = document.querySelector('.carousel-heading');
        const subheading = document.querySelector('.carousel-subheading');
        if(heading) heading.style.display = 'none';
        if(subheading) subheading.style.display = 'none';

        // VIEW MOREボタンも非表示にする
        const btnArea = document.querySelector('.carousel-btn-area');
        if (btnArea) {
            btnArea.style.display = 'none';
        }

        console.warn('No valid videos found to display in the carousel.');
      }
    });

    /* ---------- モーダル再生 ---------- */
    document.querySelectorAll(root + ' .splide__slide').forEach((slide) => {
      slide.addEventListener('click', () => {
        /* 中央スライド以外は無視 */
        if (!slide.classList.contains('is-active')) return;

        const id = slide.dataset.videoId;
        const src =
          slide.dataset.provider === 'youtube'
            ? `https://www.youtube.com/embed/${id}?autoplay=1&loop=1&playlist=${id}&rel=0`
            : `https://player.vimeo.com/video/${id}?autoplay=1&loop=1`;

        inner.innerHTML = `<iframe src="${src}" frameborder="0" allow="autoplay;fullscreen" allowfullscreen></iframe>`;
        modal.removeAttribute('hidden');
        document.body.classList.add('vc-modal-open');
      });
    });

    /* ---------- モーダルを閉じる ---------- */
    const close = () => {
      modal.setAttribute('hidden', true);
      inner.innerHTML = '';
      document.body.classList.remove('vc-modal-open');
    };

    /* × ボタン */
    modal.querySelector('.vc-modal__close').addEventListener('click', close);

    {% comment %} inner.addEventListener('click', (e) => {
      if (e.target === inner) close();
    }); {% endcomment %}

    /* モーダル全体で、動画以外をクリックしたら閉じる */
    modal.addEventListener('click', (e) => {
      if (!e.target.closest('.vc-modal__content')) close();
    });
  });
</script>

{% schema %}
{
  "name": "Video carousel",
  "tag": "section",
  "class": "video-carousel",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Video Gallery"
    },
    {
      "type": "select",
      "id": "default_provider",
      "label": "Default provider",
      "options": [
        { "value": "youtube", "label": "YouTube" },
        { "value": "vimeo", "label": "Vimeo" }
      ],
      "default": "youtube"
    },
    /* ↓ ガイド文。id を削除して content だけ残す */
    {
      "type": "paragraph",
      "content": "動画 ID は pages › movies の本文に 1 行ずつ入力してください。"
    }
  ],
  "blocks": [],
  "presets": [{ "name": "Video carousel" }]
}
{% endschema %}
